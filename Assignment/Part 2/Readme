When calling setTimeout, the normal function within it does not preserve the this context of the outer object, so it points to the global object and returns undefined. One solution is to save this in a variable (e.g., const self = this). A better approach is to use arrow functions, which don't have their own thisâ€”they borrow it from their outer scope. For instance, passing an arrow function to setTimeout guarantees this still points to the object, correcting the problem and enabling proper property access such as this.name or this.brand.